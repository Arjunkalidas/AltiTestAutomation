package featdsl.core.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

public class TestBase {
	
	public static RemoteWebDriver driver;
	public static JavascriptExecutor js = (JavascriptExecutor)driver;
	public static Properties CONFIG=null;
	public static Xls_Reader suiteXls = null;
	public static DesiredCapabilities capabilities = new DesiredCapabilities();
	public static File app;
	public static String host="localhost";
	public static String port="4723";
	public static int timeOut = 60;

	public static void main(String[] args) {
		
		appiumVersion();
		platformName();
		platformVersion();
		deviceName();
		createRemoteDriver(host, port);
		timeOuts();
	}
	
	public void initialize(){
		CONFIG = new Properties();
		try {
			FileInputStream ip = new FileInputStream(System.getProperty("user.dir")+"//src//test//java//featdsl//core//config//config.properties");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	public static void applicationPath(String applicationPath) {
		capabilities.setCapability("app", applicationPath);
	}

	public static void timeOuts() {
		driver.manage().timeouts().implicitlyWait(timeOut, TimeUnit.SECONDS);
	}

	public static void createRemoteDriver(String host, String port){
		try {
			driver = new RemoteWebDriver(new URL("http://"+host+":"+port+"/wd/hub"), capabilities);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
	}

	public static void deviceName() {
		capabilities.setCapability("deviceName", "iPhone");
	}

	public static void platformVersion() {
		capabilities.setCapability("platformVersion", "7.1.1");
	}

	public static void platformName() {
		capabilities.setCapability("platformName", "iOS");
	}

	public static void appiumVersion() {
		capabilities.setCapability("appium-version", "1.0");
	}

}

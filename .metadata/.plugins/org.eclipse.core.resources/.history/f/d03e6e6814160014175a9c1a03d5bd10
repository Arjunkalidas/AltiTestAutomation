package aiframework.core.utils;



import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.UnsupportedCommandException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.Reporter;

import altimetrik.googlemaps.automation.GoogleMaps;

import com.google.common.io.Files;

public class TestBase {
	public static RemoteWebDriver driver;
	public static WebElement myDynamicElement;
	public static JavascriptExecutor js = driver;
	public static String location;
	//********** For the snapshot folder ************//
	public static SimpleDateFormat formatter = new SimpleDateFormat("_yyyy_MMM_dd HH_mm_ss");
	public static String dateN = formatter.format(new Date().getTime());
	public static String snapShotDirectory = Files.simplifyPath(System.getProperty
			("user.dir")+"//Snapshot") + dateN;
	//public static int photoIndex = 0;

	public static TestBase tb=new TestBase();

	public static WebElement element(String locator) {

		WebElement element = null;

		try {

			element = driver.findElement(By.id(MyRepository.getNewLocator(locator, "id")));

		} catch (NoSuchElementException |UnsupportedCommandException e) {

			try {

				element = driver.findElement(By.name(MyRepository.getNewLocator(locator, "name")));


			} catch (NoSuchElementException |UnsupportedCommandException e1) {

				try{

					element = driver.findElement(By.className(MyRepository.getNewLocator(locator, "className")));

				}

				catch(NoSuchElementException |UnsupportedCommandException e2)

				{

					try{

						element=driver.findElement(By.cssSelector(MyRepository.getNewLocator(locator, "cssSelector")));

					}

					catch(NoSuchElementException |UnsupportedCommandException e3){

						try{

							element = driver.findElement(By.linkText(MyRepository.getNewLocator(locator,"linkText")));

						}

						catch(NoSuchElementException |UnsupportedCommandException e4)

						{

							try{

								element = driver.findElement(By.partialLinkText(MyRepository.getNewLocator(locator,"partialLinkText"))); 

							}

							catch(NoSuchElementException |UnsupportedCommandException e5)

							{

								try{

									element = driver.findElement(By.tagName(MyRepository.getNewLocator(locator,"tagName")));

								}

								catch(NoSuchElementException |UnsupportedCommandException e6)

								{

									try{

										element = driver.findElement(By.xpath(MyRepository.getNewLocator(locator,"xpath")));

									}

									catch(NoSuchElementException |UnsupportedCommandException e7)

									{

										e7.printStackTrace();

									}

								}

							}

						}

					}

				}

			}

		}

		return element;

	}

	public TestBase takeScreenshot(String snapShotDirectory) {
		String path = null;
		try {
			File source = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);

			String fileName = source.getName();
			/*int indexOfExt = fileName.indexOf(".");
			String file1 = fileName.substring(0,indexOfExt);
			fileName =	file1+"_"+photoIndex+".png";*/
			 		
			fileName = "screenshot"+System.currentTimeMillis()/*+"_"+photoIndex+".png"*/;
			File f = new File(snapShotDirectory);
			try{

				f.mkdir();

			}catch (SecurityException se){

			}

			path = f.getAbsolutePath() + "/" + fileName +".jpg";
			//System.out.println(path);

			FileUtils.copyFile(source, new File(path));
			Reporter.log("<a href='"+ path+"'> <img src='"+ path + " height='100' width='100'/> </a>");
			//photoIndex++;
		}
		catch(IOException e) {

			path = "Failed to capture screenshot: " + e.getMessage();

		}
		Reporter.setCurrentTestResult(null);
		return this;
	}
	
	/* File scrFile = ((TakesScreenshot) WebdriverManager.globalDriverInstance).getScreenshotAs(OutputType.FILE);
     //Needs Commons IO library
     try {
       FileUtils.copyFile(scrFile, new File(file.getAbsolutePath()+ "/selenium-reports/html/" + result.getName() + ".jpg"));
       Reporter.log("<a href='"+ file.getAbsolutePath()+"/selenium-reports/html/" + result.getName() + ".jpg'> <img src='"+ file.getAbsolutePath()+"/selenium-reports/html/"+ result.getName() + ".jpg' height='100' width='100'/> </a>");
   } catch (IOException e) {
       // TODO Auto-generated catch block
       e.printStackTrace();
   }
   Reporter.setCurrentTestResult(null);*/
};